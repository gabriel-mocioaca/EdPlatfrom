// <auto-generated />
using EdPlatform.EFDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EdPlatform.EFDataAccess.Migrations
{
    [DbContext(typeof(EdPlatformDbContext))]
    partial class EdPlatformDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.ApplicationUser", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.Assignment", b =>
                {
                    b.Property<string>("AssignmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Deadline");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("AssignmentId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.Classroom", b =>
                {
                    b.Property<string>("ClassroomId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ClassroomId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.ClassroomMessage", b =>
                {
                    b.Property<string>("ClassroomId");

                    b.Property<string>("MessageId");

                    b.HasKey("ClassroomId", "MessageId");

                    b.HasIndex("MessageId");

                    b.ToTable("ClassroomMessages");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Text");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.UserAssignment", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("AssignmentId");

                    b.Property<string>("Answer");

                    b.Property<int>("MaximumMark");

                    b.Property<string>("Status");

                    b.Property<int>("UserMark");

                    b.HasKey("UserId", "AssignmentId");

                    b.ToTable("UserAssignments");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.UserClassroom", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("ClassroomId");

                    b.HasKey("UserId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("UserClassrooms");
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.ClassroomMessage", b =>
                {
                    b.HasOne("EdPlatform.ApplicationLogic.Data.Classroom", "Classroom")
                        .WithMany("ClassroomMessages")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EdPlatform.ApplicationLogic.Data.Message", "Message")
                        .WithMany("ClassroomMessages")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.UserAssignment", b =>
                {
                    b.HasOne("EdPlatform.ApplicationLogic.Data.Assignment", "Assignment")
                        .WithMany("UserAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EdPlatform.ApplicationLogic.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("UserAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EdPlatform.ApplicationLogic.Data.UserClassroom", b =>
                {
                    b.HasOne("EdPlatform.ApplicationLogic.Data.Classroom", "Classroom")
                        .WithMany("UserClassrooms")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EdPlatform.ApplicationLogic.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("UserClassrooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
